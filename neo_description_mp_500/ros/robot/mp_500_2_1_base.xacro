<?xml version="1.0"?>

<robot
    xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
    xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
    xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface">

    <!-- Included URDF Files -->
    <include filename="$(find neo_description_mp_500)/ros/robot/materials.urdf.xacro" />
    <include filename="$(find neo_description_mp_500)/ros/robot/air_wheel.xacro" />
    <include filename="$(find neo_description_mp_500)/ros/sensors/sick_s300_laser.urdf.xacro" />

    <property name="base_link_to_top" value="0.0795" />
    <property name="base_link_to_front" value="0.2025" />
    <property name="base_link_to_back" value="0.1975" />



    <macro name="mp_s500">

        <link name="base_link">
            <inertial>
                <mass value="20" />
                <origin xyz="0 0 0" />
                <inertia ixx="1.0" ixy="0.0" ixz="0.0"
                         iyy="1.0" iyz="0.0" 
                         izz="1.0" />
            </inertial>

            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />


                <geometry>
                    <mesh filename="package://neo_description_mp_500/ros/meshes/mp_500_topplate.stl"/>
                </geometry>
              <material name="Blue" />
            </visual>
            
            <collision>
                <origin xyz="0. 0. 0.15" rpy="0 0 0" />
                <geometry>
                    <mesh filename="package://neo_description_mp_500/ros/meshes/mp_500_topplate.stl"/>
                </geometry>
            </collision>
        </link>


        <joint name="base_caster_support_joint" type="fixed">
            <origin xyz="-0.5 0 0.08" rpy="0 0 0" />
            <parent link="base_link" />
            <child link="base_caster_support_link"/>
            
            <axis xyz="0 0 1" />
            <limit effort="100" velocity="100" k_velocity="0" />
            <joint_properties damping="0.0" friction="0.0" />
        </joint>

        <link name="base_caster_support_link">
            <inertial>
                <mass value="0.1"/>
                <origin xyz="0 0 0" />
                <inertia ixx="0.01" ixy="0.0" ixz="0.0"
                         iyy="0.01" iyz="0.0"
                         izz="0.01" />
            </inertial>
            
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <mesh filename="package://neo_description_mp_500/ros/meshes/caster_support.stl"/>
                </geometry>
            </visual>
            
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <mesh filename="package://neo_description_mp_500/ros/meshes/caster_support.stl"/>
                </geometry>
            </collision>
        </link>



        <joint name="caster_wheel_joint" type="fixed">
            <origin xyz="0. 0 0.0" rpy="0 0 0" />
            <parent link="base_caster_support_link" />
            <child link="caster_wheel_link" />
            
            <axis xyz="0 1 0" />
            <anchor xyz="0 0 0" />
            <limit effort="100" velocity="100" k_velocity="0" />
            <joint_properties damping="0.0" friction="0.0" />
        </joint>

        <link name="caster_wheel_link">
            <inertial>
                <mass value="0.1" /> 
                <origin xyz="0 0 0" rpy="0 0 0" />
                <inertia  ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983"
                          iyy="0.015218160428" iyz="-0.000004273467"
                          izz="0.011763977943" />
            </inertial>
            
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <mesh filename="package://neo_description_mp_500/ros/meshes/caster_wheel.stl"/>
                </geometry>
                <material name="Black"/>
            </visual>
            
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <mesh filename="package://neo_description_mp_500/ros/meshes/caster_wheel.stl"/>
                </geometry>
            </collision>
        </link>

        <gazebo reference="caster_wheel_link">
            <mu1 value="0.01" />
            <mu2 value="0.01" />
            <kp  value="1.0" />
            <kd  value="1.0" />
        </gazebo>


        <!-- MACRO INSTANTIATION -->
        
        <air_wheel_260 suffix="left_wheel" parent="base">
            <origin xyz="0. 0.3 0.13" rpy="0 0 0" />
        </air_wheel_260>
        
        <air_wheel_260 suffix="right_wheel" parent="base">
            <origin xyz="0. -0.3 0.13" rpy="0 0 0" />
        </air_wheel_260>

       <sick_s300_laser_v0 name="base_laser" parent="base" ros_topic="sick_s300/scan" update_rate="5" min_angle="-2.3562" max_angle="2.3562" >
         <origin xyz="0.2 0 0.1" rpy="0 0 0" />
       </sick_s300_laser_v0>
        <!-- CONTROLLERS (as seen in erratic_base.xacro -->
        <gazebo>
            <controller:diffdrive_plugin name="differential_drive_controller" plugin="libdiffdrive_plugin.so">
                <alwaysOn>true</alwaysOn>
                <update>100</update>
                <updateRate>100.0</updateRate>
                <leftJoint>right_wheel_joint</leftJoint>
                <rightJoint>left_wheel_joint</rightJoint>
                <wheelSeparation>0.58</wheelSeparation>
                <wheelDiameter>0.26</wheelDiameter>
                <torque>5</torque>
                <interface:position name="position_iface_0"/>
                <topicName>cmd_vel</topicName>
            </controller:diffdrive_plugin>

            <controller:gazebo_ros_p3d name="p3d_base_controller" plugin="libgazebo_ros_p3d.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>100.0</updateRate>
                <bodyName>base_link</bodyName>
                <topicName>base_pose_ground_truth</topicName>
                <gaussianNoise>0.01</gaussianNoise>
                <frameName>map</frameName>
                <xyzOffsets>0 0 0</xyzOffsets> 
                <rpyOffsets>0 0 0</rpyOffsets>
                <interface:position name="p3d_base_position"/>
            </controller:gazebo_ros_p3d>

            <!--canonicalBody>base_footprint</canonicalBody-->

            <!-- this publishes empty joint_states due to no transmission, but
             triggering robot_state_publisher to publish tf between fixed joints in erratic,
             (e.g. base_laser_link for the base_scan frame) -->
            <controller:gazebo_ros_controller_manager name="gazebo_ros_controller_manager" plugin="libgazebo_ros_controller_manager.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>100.0</updateRate>
                <interface:audio name="gazebo_ros_controller_manager_dummy_iface" />
            </controller:gazebo_ros_controller_manager>
        </gazebo>


        <!-- GAZEBO MATERIALS -->



        <gazebo reference="base_link">
    		<material> Gazebo/BlueEmissive  </material>
        </gazebo>
        
        <gazebo reference="base_top_link">
    		<material>Gazebo/Grey </material>
        </gazebo>
        
        <gazebo reference="caster_wheel_link">
   		<material>Gazebo/Grey</material>
        </gazebo>
        
        
        <gazebo reference="base_caster_support_link">
    		<material>Gazebo/FlatBlack</material>
        </gazebo>
    </macro>
</robot>
